name: CI Pipeline with Allure Reports

on:
  workflow_dispatch:
    inputs:
      exampleInput:
        description: 'Run tests'
        required: false
        default: 'default value'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # Run the Gradle build and execute the tests
      - name: Run tests
        run: ./gradlew clean test

      # Install Allure CLI
     # Download and Install Allure CLI
      - name: Install Allure CLI
        run: |
          curl -o allure-2.21.0.tgz -L https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.21.0/allure-commandline-2.21.0.tgz
          tar -zxvf allure-2.21.0.tgz
          sudo mv allure-2.21.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version  # To check if Allure is installed properly

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          ./gradlew allureReport
          allure generate build/allure-results --clean -o allure-report

      # Upload Allure results for the Action's artifact storage
      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

     # Publish Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: success()
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git clone --branch gh-pages https://github.com/${{ github.repository }}.git gh-pages
          rm -rf gh-pages/*
          cp -r allure-report/* gh-pages/
          cd gh-pages
          touch .nojekyll  # Disable Jekyll for GitHub Pages
          git add .
          git commit -m "Update Allure report"
          git push origin gh-pages

      # Optionally, post a link to the GitHub Pages Allure report in the pull request
      - name: Post Allure Report link
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.repository }}/"
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\":\"âœ… Allure Report: [View Report](${REPORT_URL})\"}" \
            ${{ github.event.pull_request.comments_url }}
