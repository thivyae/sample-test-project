name: CI Pipeline with Allure Reports

on:
  workflow_dispatch:
    inputs:
      exampleInput:
        description: 'Run tests'
        required: false
        default: 'default value'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # Run the Gradle build and execute the tests
      - name: Run tests
        run: ./gradlew clean test

      # Download and Install Allure CLI
      - name: Install Allure CLI
        run: |
          curl -o allure-2.21.0.tgz -L https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.21.0/allure-commandline-2.21.0.tgz
          tar -zxvf allure-2.21.0.tgz
          sudo mv allure-2.21.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version  # To check if Allure is installed properly

      # Load previous test report history from gh-pages
      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # Generate Allure report
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      # Publish the Allure report to GitHub Pages
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      # Print the test results and links to the GitHub Actions Job Summary
      - name: Add reports to summary
        env:
          GITHUB_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          REPORT_URL: https://{userid}.github.io/{reponame}/${{ github.run_number }}/
        run: |
          # Determine the test status (Pass or Fail)
          if [[ "${{ steps.getReport.outputs.passed }}" -eq "${{ steps.getReport.outputs.total }}" ]]; then
            TEST_STATUS="PASS"
          else
            TEST_STATUS="FAIL"
          fi

          # Print the Workflow Link and the Allure Report Link to the GitHub Actions Job Summary
          echo "<br>Workflow Link: $GITHUB_RUN_URL" >> $GITHUB_STEP_SUMMARY
          echo "<br>Allure Report Link: $REPORT_URL" >> $GITHUB_STEP_SUMMARY
          echo "<br>Test Status: $TEST_STATUS" >> $GITHUB_STEP_SUMMARY
